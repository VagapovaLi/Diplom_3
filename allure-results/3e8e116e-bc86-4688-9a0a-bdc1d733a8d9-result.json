{"name": "Заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1258, 211). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C0C8CF25+75717]\n\tGetHandleVerifier [0x00007FF7C0C8CF80+75808]\n\t(No symbol) [0x00007FF7C0A58F9A]\n\t(No symbol) [0x00007FF7C0AB7439]\n\t(No symbol) [0x00007FF7C0AB4DF2]\n\t(No symbol) [0x00007FF7C0AB1EA1]\n\t(No symbol) [0x00007FF7C0AB0DA1]\n\t(No symbol) [0x00007FF7C0AA2394]\n\t(No symbol) [0x00007FF7C0AD737A]\n\t(No symbol) [0x00007FF7C0AA1C46]\n\t(No symbol) [0x00007FF7C0AD7590]\n\t(No symbol) [0x00007FF7C0AFF39C]\n\t(No symbol) [0x00007FF7C0AD7153]\n\t(No symbol) [0x00007FF7C0AA0421]\n\t(No symbol) [0x00007FF7C0AA11B3]\n\tGetHandleVerifier [0x00007FF7C0F8D6FD+3223453]\n\tGetHandleVerifier [0x00007FF7C0F87CA2+3200322]\n\tGetHandleVerifier [0x00007FF7C0FA5AD3+3322739]\n\tGetHandleVerifier [0x00007FF7C0CA69FA+180890]\n\tGetHandleVerifier [0x00007FF7C0CAE0FF+211359]\n\tGetHandleVerifier [0x00007FF7C0C95274+109332]\n\tGetHandleVerifier [0x00007FF7C0C95422+109762]\n\tGetHandleVerifier [0x00007FF7C0C7BA39+4825]\n\tBaseThreadInitThunk [0x00007FF874197374+20]\n\tRtlUserThreadStart [0x00007FF87505CC91+33]", "trace": "self = <tests.test_order_feed.TestFeedOrders object at 0x0000026A6DC9BB90>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b06b78d51d1490b9c5048dcd8e6226f9\")>, auth_user = None\n\n    @allure.title('Заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»')\n    def test_orders_from_order_history_displayed_order_feed(self, driver,auth_user):\n        home_page = HomePage(driver)\n>       home_page.make_order()\n\ntests\\test_order_feed.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\home_page.py:87: in make_order\n    self.click_cross_in_order_modal_window()\npages\\home_page.py:78: in click_cross_in_order_modal_window\n    self.find_clickable_element(*HomePageLocators.BUTTON_CROSS_MODAL_ORDER).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000026A6E3FE390>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...C0C7BA39+4825]\\\\n\\\\tBaseThreadInitThunk [0x00007FF874197374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF87505CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1258, 211). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=136.0.7103.92)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7C0C8CF25+75717]\nE       \tGetHandleVerifier [0x00007FF7C0C8CF80+75808]\nE       \t(No symbol) [0x00007FF7C0A58F9A]\nE       \t(No symbol) [0x00007FF7C0AB7439]\nE       \t(No symbol) [0x00007FF7C0AB4DF2]\nE       \t(No symbol) [0x00007FF7C0AB1EA1]\nE       \t(No symbol) [0x00007FF7C0AB0DA1]\nE       \t(No symbol) [0x00007FF7C0AA2394]\nE       \t(No symbol) [0x00007FF7C0AD737A]\nE       \t(No symbol) [0x00007FF7C0AA1C46]\nE       \t(No symbol) [0x00007FF7C0AD7590]\nE       \t(No symbol) [0x00007FF7C0AFF39C]\nE       \t(No symbol) [0x00007FF7C0AD7153]\nE       \t(No symbol) [0x00007FF7C0AA0421]\nE       \t(No symbol) [0x00007FF7C0AA11B3]\nE       \tGetHandleVerifier [0x00007FF7C0F8D6FD+3223453]\nE       \tGetHandleVerifier [0x00007FF7C0F87CA2+3200322]\nE       \tGetHandleVerifier [0x00007FF7C0FA5AD3+3322739]\nE       \tGetHandleVerifier [0x00007FF7C0CA69FA+180890]\nE       \tGetHandleVerifier [0x00007FF7C0CAE0FF+211359]\nE       \tGetHandleVerifier [0x00007FF7C0C95274+109332]\nE       \tGetHandleVerifier [0x00007FF7C0C95422+109762]\nE       \tGetHandleVerifier [0x00007FF7C0C7BA39+4825]\nE       \tBaseThreadInitThunk [0x00007FF874197374+20]\nE       \tRtlUserThreadStart [0x00007FF87505CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Сделать заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1258, 211). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C0C8CF25+75717]\n\tGetHandleVerifier [0x00007FF7C0C8CF80+75808]\n\t(No symbol) [0x00007FF7C0A58F9A]\n\t(No symbol) [0x00007FF7C0AB7439]\n\t(No symbol) [0x00007FF7C0AB4DF2]\n\t(No symbol) [0x00007FF7C0AB1EA1]\n\t(No symbol) [0x00007FF7C0AB0DA1]\n\t(No symbol) [0x00007FF7C0AA2394]\n\t(No symbol) [0x00007FF7C0AD737A]\n\t(No symbol) [0x00007FF7C0AA1C46]\n\t(No symbol) [0x00007FF7C0AD7590]\n\t(No symbol) [0x00007FF7C0AFF39C]\n\t(No symbol) [0x00007FF7C0AD7153]\n\t(No symbol) [0x00007FF7C0AA0421]\n\t(No symbol) [0x00007FF7C0AA11B3]\n\tGetHandleVerifier [0x00007FF7C0F8D6FD+3223453]\n\tGetHandleVerifier [0x00007FF7C0F87CA2+3200322]\n\tGetHandleVerifier [0x00007FF7C0FA5AD3+3322739]\n\tGetHandleVerifier [0x00007FF7C0CA69FA+180890]\n\tGetHandleVerifier [0x00007FF7C0CAE0FF+211359]\n\tGetHandleVerifier [0x00007FF7C0C95274+109332]\n\tGetHandleVerifier [0x00007FF7C0C95422+109762]\n\tGetHandleVerifier [0x00007FF7C0C7BA39+4825]\n\tBaseThreadInitThunk [0x00007FF874197374+20]\n\tRtlUserThreadStart [0x00007FF87505CC91+33]\n\n", "trace": "  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Diplom_3\\pages\\home_page.py\", line 87, in make_order\n    self.click_cross_in_order_modal_window()\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Diplom_3\\pages\\home_page.py\", line 78, in click_cross_in_order_modal_window\n    self.find_clickable_element(*HomePageLocators.BUTTON_CROSS_MODAL_ORDER).click()\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Добавить ингредиент", "status": "passed", "steps": [{"name": "Перетащить элемент", "status": "passed", "parameters": [{"name": "how_s", "value": "'xpath'"}, {"name": "what_s", "value": "'//img[@alt='Флюоресцентная булка R2-D3']'"}, {"name": "how_t", "value": "'css selector'"}, {"name": "what_t", "value": "'.BurgerConstructor_basket__list__l9dp_'"}], "start": 1746627902814, "stop": 1746627903877}], "start": 1746627902814, "stop": 1746627903878}, {"name": "Нажимаем на кнопку \"Оформить заказ\"", "status": "passed", "start": 1746627903878, "stop": 1746627903919}, {"name": "Ждем полного формирования модального окна заказа", "status": "passed", "start": 1746627903919, "stop": 1746627903928}, {"name": "Получаем идентификатор заказа", "status": "passed", "start": 1746627903928, "stop": 1746627904450}, {"name": "Закрываем модальное окно заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1258, 211). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C0C8CF25+75717]\n\tGetHandleVerifier [0x00007FF7C0C8CF80+75808]\n\t(No symbol) [0x00007FF7C0A58F9A]\n\t(No symbol) [0x00007FF7C0AB7439]\n\t(No symbol) [0x00007FF7C0AB4DF2]\n\t(No symbol) [0x00007FF7C0AB1EA1]\n\t(No symbol) [0x00007FF7C0AB0DA1]\n\t(No symbol) [0x00007FF7C0AA2394]\n\t(No symbol) [0x00007FF7C0AD737A]\n\t(No symbol) [0x00007FF7C0AA1C46]\n\t(No symbol) [0x00007FF7C0AD7590]\n\t(No symbol) [0x00007FF7C0AFF39C]\n\t(No symbol) [0x00007FF7C0AD7153]\n\t(No symbol) [0x00007FF7C0AA0421]\n\t(No symbol) [0x00007FF7C0AA11B3]\n\tGetHandleVerifier [0x00007FF7C0F8D6FD+3223453]\n\tGetHandleVerifier [0x00007FF7C0F87CA2+3200322]\n\tGetHandleVerifier [0x00007FF7C0FA5AD3+3322739]\n\tGetHandleVerifier [0x00007FF7C0CA69FA+180890]\n\tGetHandleVerifier [0x00007FF7C0CAE0FF+211359]\n\tGetHandleVerifier [0x00007FF7C0C95274+109332]\n\tGetHandleVerifier [0x00007FF7C0C95422+109762]\n\tGetHandleVerifier [0x00007FF7C0C7BA39+4825]\n\tBaseThreadInitThunk [0x00007FF874197374+20]\n\tRtlUserThreadStart [0x00007FF87505CC91+33]\n\n", "trace": "  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Diplom_3\\pages\\home_page.py\", line 78, in click_cross_in_order_modal_window\n    self.find_clickable_element(*HomePageLocators.BUTTON_CROSS_MODAL_ORDER).click()\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1746627904450, "stop": 1746627905479}], "start": 1746627902814, "stop": 1746627905479}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1746627902814, "stop": 1746627905480, "uuid": "e5454377-6519-4499-a078-b8b7ce3b0d55", "historyId": "6aa6728f3cf2d910ce78abbfb3cb4aa6", "testCaseId": "799cf4234733a8ee75c74e7be58c71c7", "fullName": "tests.test_order_feed.TestFeedOrders#test_orders_from_order_history_displayed_order_feed", "labels": [{"name": "feature", "value": "Страница \"Лента заказов\""}, {"name": "tag", "value": "feed_page"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestFeedOrders"}, {"name": "host", "value": "DESKTOP-O2PS26S"}, {"name": "thread", "value": "35912-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}